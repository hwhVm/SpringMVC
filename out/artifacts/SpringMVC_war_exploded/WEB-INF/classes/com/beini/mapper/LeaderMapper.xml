<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：必须与对应的接口全类名一致
    id:必须与对应接口的某个对应的方法名一致  -->
<mapper namespace="com.beini.mapper.LeaderMapper">

    <!--foreach的主要用在构建in条件中，它可以在SQL语句中进行迭代一个集合。
    foreach元素的属性主要有 item，index，collection，open，separator，close。item表示集合中每一个元素进行迭代时的别名，index指 定一个名字，用于表示在迭代过程中，每次迭代到的位置，
    open表示该语句以什么开始，separator表示在每次进行迭代之间以什么符号作为分隔 符，close表示以什么结束，在使用foreach的时候最关键的也是最容易出错的就是collection属性，
    该属性是必须指定的，但是在不同情况 下，该属性的值是不一样的，主要有一下3种情况：
    1.如果传入的是单参数且参数类型是一个List的时候，collection属性值为list
    2.如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array
    3.如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map-->

    <insert id="insertsLeader" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into leader (name,age)
        values
        <foreach collection="leaders" item="item" index="index" separator=",">
            (#{item.name},#{item.age})
        </foreach>
    </insert>

    <!--
    resultType代表的是List中的元素类型
    -->
    <select id="queryAll" resultType="Leader">
        select * from Leader
    </select>
    <!--insert
    useGeneratedKeys=”true”自动生成主键的字段

    -->
    <insert id="insertLeader" useGeneratedKeys="true" keyProperty="id" parameterType="Leader">
        insert into Leader (name,age,password) values (#{name},#{age},#{password})
    </insert>

    <update id="updateLeader" parameterType="Leader">
        update Leader set   name = #{name},  age = #{age} where id = #{id}
    </update>

    <delete id="deleteLeader">
        delete from Leader where id = #{id}
    </delete>


    <delete id="deletesMethod1">
        delete from Leader where id in (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>

    <delete id="deletesMethod2">
        delete from Leader where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <!--批量更新-->
    <update id="updatesMethod1">
        <foreach collection="updatesLeader" item="item" index="index" open="" close="" separator=";">
            update Leader set name = #{item.name},age = #{item.age} where id = ${item.id}
        </foreach>
    </update>
    <!-- resultType代表的是List中的元素类型  login
     -->
    <select id="doUserLogin" resultType="Leader">
        select * from Leader WHERE name = #{name} AND password=#{password}
    </select>
</mapper>