<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 支持上传文件 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1073741824"/>
    </bean>
    <bean id="uploadController" class="com.beini.controller.UploadController"/>
    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="com.beini"/>
    <!-- 开启注解 -->
    <mvc:annotation-driven/>
    <!--ViewResolver 视图解析器-->
    <!--用于支持Servlet、JSP视图解析-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--异步超时时间-->
    <mvc:annotation-driven>
        <!--  可不设置，使用默认的超时时间 -->
        <mvc:async-support default-timeout="3000"/>
    </mvc:annotation-driven>

    <mvc:resources location="/js/" mapping="/js/**"/>

    <!--配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/"/>
            <mvc:mapping path="/user/**"/>
            <mvc:mapping path="/test/**"/>
            <bean class="com.beini.controller.intercepto.CustomerInterceptor"></bean>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>

    <!-- 自定义的全局异常处理器
    只要实现HandlerExceptionResolver接口就是全局异常处理器-->
    <bean class="com.beini.controller.exception.CustomerHandlerExceptionResolver"></bean>
    <!-- springmvc提供的简单异常处理器 -->
    <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    -->
    <!-- 定义默认的异常处理页面 -->
    <!--     <property name="defaultErrorView" value="/error/error"/> -->
    <!-- 定义异常处理页面用来获取异常信息的变量名，也可不定义，默认名为exception -->
    <!--   <property name="exceptionAttribute" value="ex"/>-->
    <!-- 定义需要特殊处理的异常，这是重要点 -->
    <!--    <property name="exceptionMappings">-->
    <!--        <props> -->
    <!--      <prop key="com.beini.controller.exception.CustomException">/error/error</prop>-->
    <!--  </props>-->
    <!-- 还可以定义其他的自定义异常 -->
    <!--   </property> -->
    <!-- </bean>-->

</beans>
